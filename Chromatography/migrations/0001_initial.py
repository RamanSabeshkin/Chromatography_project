# Generated by Django 3.2.7 on 2021-10-21 14:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('C18', 'C18-column'), ('C8', 'C8-column')], default='C18', max_length=20)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('abbreviation', models.CharField(blank=True, max_length=20)),
                ('manufacturer', models.CharField(max_length=100)),
                ('dimensions', models.CharField(blank=True, max_length=50, verbose_name='Dimensions, L×i.d.(mm×mm)')),
                ('particle_size', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Particle size (µm)')),
                ('pore_size', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Pore size (C)')),
                ('pore_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Pore volume (ml/g)')),
                ('surface_area', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Surface area (m^2/g)')),
                ('carbon_loading', models.CharField(blank=True, max_length=50, verbose_name='Carbon loading(%)')),
                ('surface_coverage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Surface coverage (µmol/m^2)')),
                ('bulk_density', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Bulk density (g/ml)')),
                ('end_capping', models.CharField(blank=True, max_length=50)),
                ('silica', models.CharField(blank=True, max_length=50)),
                ('slug', models.SlugField(max_length=100, unique_for_date='publish')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_column', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('birth', models.DateTimeField(blank=True, null=True)),
                ('position', models.CharField(max_length=255)),
                ('photo', models.ImageField(blank=True, upload_to='user/%Y/%m/%d')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LSERModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eluent', models.CharField(max_length=255, verbose_name='Eluent (Solvent1 Solvent2)')),
                ('gradient_of_eluent', models.CharField(blank=True, max_length=255, verbose_name='Gradient of eluent (%)')),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('gradient_time', models.CharField(max_length=255, verbose_name='tg (min)')),
                ('temperature', models.DecimalField(decimal_places=1, max_digits=4, verbose_name='Temperature of column (°C)')),
                ('flow_rate', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='Flow rate (ml/min)')),
                ('injected_volume', models.DecimalField(blank=True, decimal_places=1, max_digits=3, verbose_name='Injected volume (µl)')),
                ('k1', models.DecimalField(decimal_places=4, max_digits=7)),
                ('k2', models.DecimalField(decimal_places=4, max_digits=7)),
                ('k3', models.DecimalField(decimal_places=4, max_digits=7)),
                ('k4', models.DecimalField(decimal_places=4, max_digits=7)),
                ('slug', models.SlugField(max_length=100, unique_for_date='publish')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_lserModel', to=settings.AUTH_USER_MODEL)),
                ('column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Chromatography.column', to_field='name')),
            ],
        ),
        migrations.CreateModel(
            name='LogPModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eluent', models.CharField(max_length=255, verbose_name='Eluent (Solvent1 Solvent2)')),
                ('gradient_of_eluent', models.CharField(blank=True, max_length=255, verbose_name='Gradient of eluent (%)')),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('gradient_time', models.CharField(max_length=255, verbose_name='tg (min)')),
                ('temperature', models.DecimalField(decimal_places=1, max_digits=4, verbose_name='Temperature of column (°C)')),
                ('flow_rate', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='Flow rate (ml/min)')),
                ('injected_volume', models.DecimalField(blank=True, decimal_places=1, max_digits=3, verbose_name='Injected volume (µl)')),
                ('k1', models.DecimalField(decimal_places=4, max_digits=7)),
                ('k2', models.DecimalField(decimal_places=4, max_digits=7)),
                ('slug', models.SlugField(max_length=100, unique_for_date='publish')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_logPModel', to=settings.AUTH_USER_MODEL)),
                ('column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Chromatography.column', to_field='name')),
            ],
        ),
    ]
